"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{const e=exports.Emile,t=document.querySelector("#container--dashboard"),a=document.querySelector("#form--dashboard"),n="dashboard--startDateString",s=a.querySelector(`#${n}`),i=sessionStorage.getItem(n);null!==i&&(s.value=i);const d="dashboard--endDateString",l=a.querySelector(`#${d}`),o=sessionStorage.getItem(d);null!==o&&(l.value=o);const r=a.querySelector('button[type="submit"]');let c={};function u(e,t){return`${e}_${t}`}function h(e){return new Date(1e3*e).toLocaleString()}function v(e,t,a){e.data.labels.push(t);for(const t of e.data.datasets)t.data.push(a)}function m(e,t){var a,n,s,i,d;const l=document.createElement("tr");l.innerHTML=`<td>${h(t.timeSeconds)}</td>\n      <td>${function(e){let t=e,a="s";return t>=60?(a="min",(t/=60)>=60?(a="hr",(t/=60)>=24&&(t/=24,a="days"),`${t} ${a}`):`${t} ${a}`):`${t} ${a}`}(t.durationSeconds)}</td>\n      <td>${null!==(a=t.readingType)&&void 0!==a?a:""}</td>\n      <td>${null!==(n=t.commodity)&&void 0!==n?n:""}</td>\n      <td class="has-text-right">${t.dataValue}</td>\n      <td>${null!==(s=t.powerOfTenMultiplierName)&&void 0!==s?s:""}</td>\n      <td>${null!==(i=t.unit)&&void 0!==i?i:""}</td>`,null===(d=e.querySelector("tbody"))||void 0===d||d.append(l)}function p(){s.value>l.value?t.innerHTML='<div class="message is-warning">\n        <p class="message-body">The start date must be less than or equal to the end date.</p>\n        </div>':(r.disabled=!0,t.innerHTML='<p class="has-text-centered has-text-grey">\n      <i class="fas fa-pulse fa-spinner fa-4x" aria-hidden="true"></i><br />\n      Loading data...\n      </p>',sessionStorage.setItem(n,s.value),sessionStorage.setItem(d,l.value),cityssm.postJSON(`${e.urlPrefix}/dashboard/doGetEnergyData`,a,a=>{var n,s,i;const d=a;t.innerHTML="",c={},0===d.energyData.length&&(t.innerHTML='<div class="message is-info">\n            <p class="message-body">There is no energy data that meets your search criteria.</p>\n            </div>');for(const e of d.energyData){const a=u(e.assetId,e.dataTypeId);if(void 0===c[a]){const d=document.createElement("div");d.className="panel",d.innerHTML=`<div class="panel-heading">\n              <div class="level is-mobile">\n                <div class="level-left">\n                  <div class="level-item">\n                    <i class="${null!==(n=e.fontAwesomeIconClasses)&&void 0!==n?n:"fas fa-bolt"}" aria-hidden="true"></i>\n                  </div>\n                  <div class="level-item is-block">\n                    <h2 class="has-text-weight-bold" data-field="assetName"></h2>\n                    <span class="has-text-weight-normal" data-field="serviceCategory"></span>\n                  </div>\n                </div>\n                <div class="level-right">\n                  <div class="level-item">\n                    <div class="tabs is-toggle is-toggle-rounded has-text-weight-normal">\n                      <ul role="presentation">\n                        <li class="is-active">\n                          <a href="#chartTab_${a}">\n                            <span class="icon is-small"><i class="fas fa-chart-bar" aria-hidden="true"></i></span>\n                            <span>Chart</span>\n                          </a>\n                        </li>\n                        <li>\n                          <a href="#tableTab_${a}">\n                            <span class="icon is-small"><i class="fas fa-table" aria-hidden="true"></i></span>\n                            <span>Table</span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                  <div class="level-item">\n                    <a class="button is-export-link" download>\n                      <span class="icon is-small"><i class="fas fa-file-csv" aria-hidden="true"></i></span>\n                      <span class="has-text-weight-normal">Export</span>\n                    </a>\n                  </div>\n                </div>\n              </div>\n              </div>\n              <div class="tabs-container panel-block is-block">\n                <div id="chartTab_${a}">\n                  <canvas style="max-height:400px"></canvas>\n                </div>\n                <div id="tableTab_${a}" class="is-hidden">\n                  <table class="table is-fullwidth is-striped is-hoverable has-sticky-header">\n                    <thead>\n                      <tr>\n                        <th>Time</th>\n                        <th>Duration</th>\n                        <th>Reading Type</th>\n                        <th>Commodity</th>\n                        <th class="has-text-right">Value</th>\n                        <th colspan="2">Unit</th>\n                      </tr>\n                    </thead>\n                    <tbody></tbody>\n                  </table>\n                </div>\n              </div>`,d.querySelector('[data-field="assetName"]').textContent=null!==(s=e.assetName)&&void 0!==s?s:"",d.querySelector('[data-field="serviceCategory"]').textContent=null!==(i=e.serviceCategory)&&void 0!==i?i:"",t.append(d);const l=new Chart(d.querySelector("canvas"),{type:"bar",data:{labels:[h(e.timeSeconds)],datasets:[{label:e.unit,data:[e.dataValue*Math.pow(10,e.powerOfTenMultiplier)]}]}}),o=d.querySelector("table");c[a]={chart:l,table:o,exportLink:t.querySelector(".is-export-link"),assetId:e.assetId,dataTypeId:e.dataTypeId,timeSecondsMin:e.timeSeconds,timeSecondsMax:e.timeSeconds},m(o,e)}else v(c[a].chart,h(e.timeSeconds),e.dataValue*Math.pow(10,e.powerOfTenMultiplier)),m(c[a].table,e),c[a].timeSecondsMin=Math.min(c[a].timeSecondsMin,e.timeSeconds),c[a].timeSecondsMax=Math.max(c[a].timeSecondsMax,e.timeSeconds)}for(const t of Object.values(c))t.chart.update(),t.exportLink.href=`${e.urlPrefix}/reports/energyData-formatted-filtered/?assetId=${t.assetId}&dataTypeId=${t.dataTypeId}&timeSecondsMin=${t.timeSecondsMin}&timeSecondsMax=${t.timeSecondsMax}`;bulmaJS.init(t)}))}function b(){r.disabled=!1}e.initializeAssetSelector({assetSelectorElement:a.querySelector("#dashboard--assetSelector"),callbackFunction:p}),s.addEventListener("change",b),l.addEventListener("change",b),a.addEventListener("submit",e=>{e.preventDefault(),p()}),p()})();